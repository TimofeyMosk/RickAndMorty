{"ast":null,"code":"import { mainAPI } from '../api/api';\nconst SET_DATA = 'SET_DATA';\nconst SET_INFO = 'SET_INFO';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst initialState = {\n  data: [],\n  info: {},\n  currentPage: 1\n};\nexport const mainReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case SET_DATA:\n      return {\n        ...state,\n        data: action.data\n      };\n    case SET_INFO:\n      return {\n        ...state,\n        info: action.info\n      };\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage\n      };\n    default:\n      return state;\n  }\n};\nconst setData = data => ({\n  type: SET_DATA,\n  data\n});\nconst setInfo = info => ({\n  type: SET_INFO,\n  info\n});\nconst setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const requestData = page => async dispatch => {\n  const response = await mainAPI.getData(page);\n  if (response.status === 200) {\n    dispatch(setData(response.data.results));\n    dispatch(setInfo(response.data.info));\n  } else {\n    console.log(response);\n  }\n};\nexport const changePage = page => async dispatch => dispatch(setCurrentPage(page));","map":{"version":3,"names":["mainAPI","SET_DATA","SET_INFO","SET_CURRENT_PAGE","initialState","data","info","currentPage","mainReducer","state","action","type","setData","setInfo","setCurrentPage","requestData","page","dispatch","response","getData","status","results","console","log","changePage"],"sources":["/Users/timofeymoskalev/Programming/frontend/RickAndMorty/src/redux/main-reducer.js"],"sourcesContent":["import { mainAPI } from '../api/api';\n\nconst SET_DATA = 'SET_DATA'\nconst SET_INFO = 'SET_INFO'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\n\nconst initialState = {\n    data: [],\n    info: {},\n    currentPage: 1,\n}\n\nexport const mainReducer = (state = initialState, action) => {\n    switch (action.type){\n        case SET_DATA: \n            return {...state, data: action.data}\n        case SET_INFO: \n            return {...state, info: action.info}\n        case SET_CURRENT_PAGE: \n            return {...state, currentPage: action.currentPage}\n        default: \n            return state\n    }\n}\n\nconst setData = (data) => ({type: SET_DATA, data})\nconst setInfo = (info) => ({type: SET_INFO, info})\nconst setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\n\nexport const requestData = (page) => async (dispatch) => {\n    const response = await mainAPI.getData(page)\n    if(response.status === 200){\n        dispatch(setData(response.data.results))\n        dispatch(setInfo(response.data.info))\n    }else{\n        console.log(response);\n    }\n}\n\nexport const changePage = (page) => async (dispatch) => dispatch(setCurrentPage(page))"],"mappings":"AAAA,SAASA,OAAO,QAAQ,YAAY;AAEpC,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,gBAAgB,GAAG,kBAAkB;AAE3C,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,EAAE;EACRC,IAAI,EAAE,CAAC,CAAC;EACRC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGL,YAAY;EAAA,IAAEM,MAAM;EACpD,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKV,QAAQ;MACT,OAAO;QAAC,GAAGQ,KAAK;QAAEJ,IAAI,EAAEK,MAAM,CAACL;MAAI,CAAC;IACxC,KAAKH,QAAQ;MACT,OAAO;QAAC,GAAGO,KAAK;QAAEH,IAAI,EAAEI,MAAM,CAACJ;MAAI,CAAC;IACxC,KAAKH,gBAAgB;MACjB,OAAO;QAAC,GAAGM,KAAK;QAAEF,WAAW,EAAEG,MAAM,CAACH;MAAW,CAAC;IACtD;MACI,OAAOE,KAAK;EAAA;AAExB,CAAC;AAED,MAAMG,OAAO,GAAIP,IAAI,KAAM;EAACM,IAAI,EAAEV,QAAQ;EAAEI;AAAI,CAAC,CAAC;AAClD,MAAMQ,OAAO,GAAIP,IAAI,KAAM;EAACK,IAAI,EAAET,QAAQ;EAAEI;AAAI,CAAC,CAAC;AAClD,MAAMQ,cAAc,GAAIP,WAAW,KAAM;EAACI,IAAI,EAAER,gBAAgB;EAAEI;AAAW,CAAC,CAAC;AAE/E,OAAO,MAAMQ,WAAW,GAAIC,IAAI,IAAK,MAAOC,QAAQ,IAAK;EACrD,MAAMC,QAAQ,GAAG,MAAMlB,OAAO,CAACmB,OAAO,CAACH,IAAI,CAAC;EAC5C,IAAGE,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAC;IACvBH,QAAQ,CAACL,OAAO,CAACM,QAAQ,CAACb,IAAI,CAACgB,OAAO,CAAC,CAAC;IACxCJ,QAAQ,CAACJ,OAAO,CAACK,QAAQ,CAACb,IAAI,CAACC,IAAI,CAAC,CAAC;EACzC,CAAC,MAAI;IACDgB,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EACzB;AACJ,CAAC;AAED,OAAO,MAAMM,UAAU,GAAIR,IAAI,IAAK,MAAOC,QAAQ,IAAKA,QAAQ,CAACH,cAAc,CAACE,IAAI,CAAC,CAAC"},"metadata":{},"sourceType":"module"}