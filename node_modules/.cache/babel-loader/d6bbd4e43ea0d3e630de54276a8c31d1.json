{"ast":null,"code":"import { mainAPI } from '../api/api';\nconst SET_DATA = 'SET_DATA';\nconst SET_INFO = 'SET_INFO';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_CHARACTER = 'SET_CHARACTER';\nconst SET_EPISODES = 'SET_EPISODES';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst initialState = {\n  data: [],\n  info: {},\n  currentPage: 1,\n  character: {},\n  episodes: [],\n  isFetching: false\n};\nexport const mainReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_DATA:\n      return { ...state,\n        data: action.data\n      };\n\n    case SET_INFO:\n      return { ...state,\n        info: action.info\n      };\n\n    case SET_CHARACTER:\n      return { ...state,\n        character: action.character\n      };\n\n    case SET_EPISODES:\n      return { ...state,\n        episodes: action.episodes\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setData = data => ({\n  type: SET_DATA,\n  data\n});\n\nconst setInfo = info => ({\n  type: SET_INFO,\n  info\n});\n\nconst toggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\n\nconst setCharacter = character => ({\n  type: SET_CHARACTER,\n  character\n});\n\nconst setEpisodes = episodes => ({\n  type: SET_EPISODES,\n  episodes\n});\n\nconst setCurrentPage = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\n\nexport const requestData = page => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const response = await mainAPI.getData(page);\n\n  if (response.status === 200) {\n    dispatch(setData(response.data.results));\n    dispatch(setInfo(response.data.info));\n    dispatch(toggleIsFetching(false));\n  } else {\n    console.log(response);\n    dispatch(toggleIsFetching(false));\n  }\n};\nexport const requestCharacter = id => async dispatch => {\n  dispatch(toggleIsFetching(true));\n  const response = await mainAPI.getCharacter(id);\n\n  if (response.status === 200) {\n    dispatch(setCharacter(response.data));\n    let allEpisodes = [];\n    response.data.episode.forEach(el => {\n      const id = el.split('/').pop();\n      allEpisodes.push(id);\n    });\n    const responseEpisodes = await mainAPI.getEpisodes(allEpisodes);\n\n    if (responseEpisodes.status === 200) {\n      let dataArr = [].concat(responseEpisodes.data);\n      dataArr = await Promise.all(dataArr.map(async ep => {\n        let queryString = ep.characters[ep.characters.length - 1].split('/').pop() + ',' + ep.characters[ep.characters.length - 2].split('/').pop();\n        let result = await mainAPI.getCharacter(queryString);\n        return { ...ep,\n          charactersImages: [result.data[0].image, result.data[1].image]\n        };\n      }));\n      dispatch(setEpisodes(dataArr));\n      dispatch(toggleIsFetching(false));\n    } else console.log(responseEpisodes);\n\n    dispatch(toggleIsFetching(false));\n  } else {\n    console.log(response);\n    dispatch(toggleIsFetching(false));\n  }\n};\nexport const changePage = page => async dispatch => dispatch(setCurrentPage(page));","map":{"version":3,"names":["mainAPI","SET_DATA","SET_INFO","SET_CURRENT_PAGE","SET_CHARACTER","SET_EPISODES","TOGGLE_IS_FETCHING","initialState","data","info","currentPage","character","episodes","isFetching","mainReducer","state","action","type","setData","setInfo","toggleIsFetching","setCharacter","setEpisodes","setCurrentPage","requestData","page","dispatch","response","getData","status","results","console","log","requestCharacter","id","getCharacter","allEpisodes","episode","forEach","el","split","pop","push","responseEpisodes","getEpisodes","dataArr","concat","Promise","all","map","ep","queryString","characters","length","result","charactersImages","image","changePage"],"sources":["/Users/timofeymoskalev/Programming/Frontend/MoskalevRickAndMortyHHS/src/redux/main-reducer.js"],"sourcesContent":["import { mainAPI } from '../api/api';\n\nconst SET_DATA = 'SET_DATA'\nconst SET_INFO = 'SET_INFO'\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\nconst SET_CHARACTER = 'SET_CHARACTER'\nconst SET_EPISODES = 'SET_EPISODES'\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\n\nconst initialState = {\n    data: [],\n    info: {},\n    currentPage: 1,\n    character: {},\n    episodes: [],\n    isFetching: false\n}\n\nexport const mainReducer = (state = initialState, action) => {\n    switch (action.type){\n        case SET_DATA: \n            return {...state, data: action.data}\n        case SET_INFO: \n            return {...state, info: action.info}\n        case SET_CHARACTER: \n            return {...state, character: action.character}\n        case SET_EPISODES: \n            return {...state, episodes: action.episodes}\n        case TOGGLE_IS_FETCHING: \n            return {...state, isFetching: action.isFetching}\n        case SET_CURRENT_PAGE: \n            return {...state, currentPage: action.currentPage}\n        default: \n            return state\n    }\n}\n\nconst setData = (data) => ({type: SET_DATA, data})\nconst setInfo = (info) => ({type: SET_INFO, info})\nconst toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nconst setCharacter = (character) => ({type: SET_CHARACTER, character})\nconst setEpisodes = (episodes) => ({type: SET_EPISODES, episodes})\nconst setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\n\nexport const requestData = (page) => async (dispatch) => {\n    dispatch(toggleIsFetching(true))\n    const response = await mainAPI.getData(page)\n    if(response.status === 200){\n        dispatch(setData(response.data.results))\n        dispatch(setInfo(response.data.info))\n        dispatch(toggleIsFetching(false))\n    }else{\n        console.log(response);\n        dispatch(toggleIsFetching(false))\n    }\n}\n\nexport const requestCharacter = (id) => async (dispatch) => {\n    dispatch(toggleIsFetching(true))\n    const response = await mainAPI.getCharacter(id)\n    if(response.status === 200){\n        dispatch(setCharacter(response.data))\n\n        let allEpisodes = []\n\n        response.data.episode.forEach(el => {\n            const id = el.split('/').pop()\n            allEpisodes.push(id)\n        })\n\n        const responseEpisodes = await mainAPI.getEpisodes(allEpisodes)\n        if(responseEpisodes.status === 200){\n            let dataArr = [].concat(responseEpisodes.data)\n\n            dataArr = await Promise.all(dataArr.map(async (ep) => {\n                let queryString = ep.characters[ep.characters.length - 1].split('/').pop() + ',' + ep.characters[ep.characters.length - 2].split('/').pop()\n                let result = await mainAPI.getCharacter(queryString)\n                return {...ep, charactersImages: [\n                    result.data[0].image, \n                    result.data[1].image\n                ]}\n            }))\n            dispatch(setEpisodes(dataArr))\n            dispatch(toggleIsFetching(false))\n        }else console.log(responseEpisodes)\n        dispatch(toggleIsFetching(false))\n    }else{\n        console.log(response);\n        dispatch(toggleIsFetching(false))\n    }\n}\n\n\nexport const changePage = (page) => async (dispatch) => dispatch(setCurrentPage(page))"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B;AAEA,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAE,EADW;EAEjBC,IAAI,EAAE,EAFW;EAGjBC,WAAW,EAAE,CAHI;EAIjBC,SAAS,EAAE,EAJM;EAKjBC,QAAQ,EAAE,EALO;EAMjBC,UAAU,EAAE;AANK,CAArB;AASA,OAAO,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBR,YAAyB;EAAA,IAAXS,MAAW;;EACzD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKhB,QAAL;MACI,OAAO,EAAC,GAAGc,KAAJ;QAAWP,IAAI,EAAEQ,MAAM,CAACR;MAAxB,CAAP;;IACJ,KAAKN,QAAL;MACI,OAAO,EAAC,GAAGa,KAAJ;QAAWN,IAAI,EAAEO,MAAM,CAACP;MAAxB,CAAP;;IACJ,KAAKL,aAAL;MACI,OAAO,EAAC,GAAGW,KAAJ;QAAWJ,SAAS,EAAEK,MAAM,CAACL;MAA7B,CAAP;;IACJ,KAAKN,YAAL;MACI,OAAO,EAAC,GAAGU,KAAJ;QAAWH,QAAQ,EAAEI,MAAM,CAACJ;MAA5B,CAAP;;IACJ,KAAKN,kBAAL;MACI,OAAO,EAAC,GAAGS,KAAJ;QAAWF,UAAU,EAAEG,MAAM,CAACH;MAA9B,CAAP;;IACJ,KAAKV,gBAAL;MACI,OAAO,EAAC,GAAGY,KAAJ;QAAWL,WAAW,EAAEM,MAAM,CAACN;MAA/B,CAAP;;IACJ;MACI,OAAOK,KAAP;EAdR;AAgBH,CAjBM;;AAmBP,MAAMG,OAAO,GAAIV,IAAD,KAAW;EAACS,IAAI,EAAEhB,QAAP;EAAiBO;AAAjB,CAAX,CAAhB;;AACA,MAAMW,OAAO,GAAIV,IAAD,KAAW;EAACQ,IAAI,EAAEf,QAAP;EAAiBO;AAAjB,CAAX,CAAhB;;AACA,MAAMW,gBAAgB,GAAIP,UAAD,KAAiB;EAACI,IAAI,EAAEX,kBAAP;EAA2BO;AAA3B,CAAjB,CAAzB;;AACA,MAAMQ,YAAY,GAAIV,SAAD,KAAgB;EAACM,IAAI,EAAEb,aAAP;EAAsBO;AAAtB,CAAhB,CAArB;;AACA,MAAMW,WAAW,GAAIV,QAAD,KAAe;EAACK,IAAI,EAAEZ,YAAP;EAAqBO;AAArB,CAAf,CAApB;;AACA,MAAMW,cAAc,GAAIb,WAAD,KAAkB;EAACO,IAAI,EAAEd,gBAAP;EAAyBO;AAAzB,CAAlB,CAAvB;;AAEA,OAAO,MAAMc,WAAW,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;EACrDA,QAAQ,CAACN,gBAAgB,CAAC,IAAD,CAAjB,CAAR;EACA,MAAMO,QAAQ,GAAG,MAAM3B,OAAO,CAAC4B,OAAR,CAAgBH,IAAhB,CAAvB;;EACA,IAAGE,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;IACvBH,QAAQ,CAACR,OAAO,CAACS,QAAQ,CAACnB,IAAT,CAAcsB,OAAf,CAAR,CAAR;IACAJ,QAAQ,CAACP,OAAO,CAACQ,QAAQ,CAACnB,IAAT,CAAcC,IAAf,CAAR,CAAR;IACAiB,QAAQ,CAACN,gBAAgB,CAAC,KAAD,CAAjB,CAAR;EACH,CAJD,MAIK;IACDW,OAAO,CAACC,GAAR,CAAYL,QAAZ;IACAD,QAAQ,CAACN,gBAAgB,CAAC,KAAD,CAAjB,CAAR;EACH;AACJ,CAXM;AAaP,OAAO,MAAMa,gBAAgB,GAAIC,EAAD,IAAQ,MAAOR,QAAP,IAAoB;EACxDA,QAAQ,CAACN,gBAAgB,CAAC,IAAD,CAAjB,CAAR;EACA,MAAMO,QAAQ,GAAG,MAAM3B,OAAO,CAACmC,YAAR,CAAqBD,EAArB,CAAvB;;EACA,IAAGP,QAAQ,CAACE,MAAT,KAAoB,GAAvB,EAA2B;IACvBH,QAAQ,CAACL,YAAY,CAACM,QAAQ,CAACnB,IAAV,CAAb,CAAR;IAEA,IAAI4B,WAAW,GAAG,EAAlB;IAEAT,QAAQ,CAACnB,IAAT,CAAc6B,OAAd,CAAsBC,OAAtB,CAA8BC,EAAE,IAAI;MAChC,MAAML,EAAE,GAAGK,EAAE,CAACC,KAAH,CAAS,GAAT,EAAcC,GAAd,EAAX;MACAL,WAAW,CAACM,IAAZ,CAAiBR,EAAjB;IACH,CAHD;IAKA,MAAMS,gBAAgB,GAAG,MAAM3C,OAAO,CAAC4C,WAAR,CAAoBR,WAApB,CAA/B;;IACA,IAAGO,gBAAgB,CAACd,MAAjB,KAA4B,GAA/B,EAAmC;MAC/B,IAAIgB,OAAO,GAAG,GAAGC,MAAH,CAAUH,gBAAgB,CAACnC,IAA3B,CAAd;MAEAqC,OAAO,GAAG,MAAME,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,GAAR,CAAY,MAAOC,EAAP,IAAc;QAClD,IAAIC,WAAW,GAAGD,EAAE,CAACE,UAAH,CAAcF,EAAE,CAACE,UAAH,CAAcC,MAAd,GAAuB,CAArC,EAAwCb,KAAxC,CAA8C,GAA9C,EAAmDC,GAAnD,KAA2D,GAA3D,GAAiES,EAAE,CAACE,UAAH,CAAcF,EAAE,CAACE,UAAH,CAAcC,MAAd,GAAuB,CAArC,EAAwCb,KAAxC,CAA8C,GAA9C,EAAmDC,GAAnD,EAAnF;QACA,IAAIa,MAAM,GAAG,MAAMtD,OAAO,CAACmC,YAAR,CAAqBgB,WAArB,CAAnB;QACA,OAAO,EAAC,GAAGD,EAAJ;UAAQK,gBAAgB,EAAE,CAC7BD,MAAM,CAAC9C,IAAP,CAAY,CAAZ,EAAegD,KADc,EAE7BF,MAAM,CAAC9C,IAAP,CAAY,CAAZ,EAAegD,KAFc;QAA1B,CAAP;MAIH,CAP2B,CAAZ,CAAhB;MAQA9B,QAAQ,CAACJ,WAAW,CAACuB,OAAD,CAAZ,CAAR;MACAnB,QAAQ,CAACN,gBAAgB,CAAC,KAAD,CAAjB,CAAR;IACH,CAbD,MAaMW,OAAO,CAACC,GAAR,CAAYW,gBAAZ;;IACNjB,QAAQ,CAACN,gBAAgB,CAAC,KAAD,CAAjB,CAAR;EACH,CA1BD,MA0BK;IACDW,OAAO,CAACC,GAAR,CAAYL,QAAZ;IACAD,QAAQ,CAACN,gBAAgB,CAAC,KAAD,CAAjB,CAAR;EACH;AACJ,CAjCM;AAoCP,OAAO,MAAMqC,UAAU,GAAIhC,IAAD,IAAU,MAAOC,QAAP,IAAoBA,QAAQ,CAACH,cAAc,CAACE,IAAD,CAAf,CAAzD"},"metadata":{},"sourceType":"module"}